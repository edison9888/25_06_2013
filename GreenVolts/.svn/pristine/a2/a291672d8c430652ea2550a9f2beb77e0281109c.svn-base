//
//  MaintenanceLogDetailView.m
//  GreenVolts
//
//  Created by Shinu Mohan on 23/08/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "MaintenanceLogDetailView.h"
#import "MaintenanceTask.h"


@interface MaintenanceLogDetailView() 

-(void)createCustomNavigationView;
- (IBAction)logbackButtonTouched:(id)sender;   
@end
MaintenanceTask *tempMaintenanceTask;
@implementation MaintenanceLogDetailView
@synthesize maintenanceLogDetailCell;
@synthesize contentArray;
@synthesize delegate;
@synthesize componentid;
@synthesize title;


#pragma mark-initialisation
- (id)initWithFrame:(CGRect)frame titleString:(NSString *)value
{
    self = [super initWithFrame:frame];
    if (self) {
        self.title = value;
        [self loadview];
        // Initialization code
    }
    return self;
}
#pragma mark- load views
-(void) loadview
{
    self.backgroundColor = [UIColor lightGrayColor];
    [self createCustomNavigationView];
    maintenacelogDetailTable = [[UITableView alloc] initWithFrame: CGRectMake(0,45,320,330) style:UITableViewStylePlain];
    maintenacelogDetailTable.separatorStyle=UITableViewCellSeparatorStyleNone;
    maintenacelogDetailTable.backgroundColor=[UIColor colorWithRed:31/255.0f green:41/255.0f blue:58/255.0f alpha:1];
    maintenacelogDetailTable.delegate = self;
	maintenacelogDetailTable.dataSource = self;
	[self addSubview:maintenacelogDetailTable]; 
    
}

#pragma mark-custom methods

-(void)createCustomNavigationView
{
    UINavigationBar *navBar = [[UINavigationBar alloc]initWithFrame:CGRectMake(0, 0, 320, 45)];
    //navBar.tintColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"navpopover_cell_backround (2)"]];
    navBar.tintColor=[UIColor colorWithRed:1/255.f green:14/255.f blue:41/255.f alpha:1];
    UIButton *button=[UIButton buttonWithType:UIButtonTypeCustom];
    button.frame=CGRectMake(5,5,80,30);
    button.backgroundColor=[UIColor clearColor];
    [button setBackgroundImage:[UIImage imageNamed:@"Back.png"] forState:UIControlStateNormal];
    [button setTitle:@"Back" forState:UIControlStateNormal];
    button.titleLabel.textColor=[UIColor whiteColor];
    [button addTarget:self action:@selector(logbackButtonTouched:) forControlEvents:UIControlEventTouchUpInside];
    [navBar addSubview:button]; 
 
    UILabel *logtitlelabel = [[UILabel alloc] initWithFrame:CGRectMake(100,10,200,25)];
    //logtitlelabel.numberOfLines = 0;//Dynamic
    logtitlelabel.backgroundColor = [UIColor clearColor];
    logtitlelabel.textColor = [UIColor whiteColor];
    logtitlelabel.text = title;
    [navBar addSubview:logtitlelabel];
    
    [self addSubview:navBar];
    
    
   
}
#pragma mark- Table Delegates
- (NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{   
    if (self.contentArray)
    {
        return [self.contentArray count];
    }
    else
    {
        return 0;
    }
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
	return 1;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{	
    
    
    static NSString *CellIdentifier = @"Cell";
    MaintenanceLogDetailCell *logmaintenanceDetailCell = (MaintenanceLogDetailCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];

    
    if (logmaintenanceDetailCell == nil) 
    {
        [[NSBundle mainBundle] loadNibNamed:@"MaintenanceLogDetailCell" owner:self options:nil];
        logmaintenanceDetailCell = maintenanceLogDetailCell;
        self.maintenanceLogDetailCell = nil;
    }
    
    logmaintenanceDetailCell.selectionStyle = UITableViewCellSelectionStyleNone;
    tempMaintenanceTask=[self.contentArray objectAtIndex:indexPath.row];
    [logmaintenanceDetailCell displayDetails:indexPath.row :tempMaintenanceTask.name];
    return logmaintenanceDetailCell;
   
    
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath 
{
   
    [tableView cellForRowAtIndexPath:indexPath].accessoryType=UITableViewCellAccessoryCheckmark;
    
    
    [UIView animateWithDuration:.35 delay:0.0 options:UIViewAnimationCurveEaseOut animations:
     ^{
         //self.center = CGPointMake(self.center.x + CGRectGetWidth(self.frame), self.frame.origin.y);         
         CGRect newRect = self.frame;
         newRect.origin.x += newRect.size.width;
         self.frame = newRect;
     } completion:^(BOOL finished) {
         [self removeFromSuperview];
     }];
    //return selected task/component and its type through delegate
    
    tempMaintenanceTask=[self.contentArray objectAtIndex:indexPath.row];
    NSLog(@"task:%@",tempMaintenanceTask.name);
    
    if(self.delegate && [self.delegate respondsToSelector:@selector(logdetailtaskselected::)])
    
    [self.delegate logdetailtaskselected:tempMaintenanceTask.name :componentid];
    
    
}
#pragma mark-button actions

- (IBAction)logbackButtonTouched:(id)sender
 {
     
    [UIView animateWithDuration:.35 delay:0.0 options:UIViewAnimationCurveEaseOut animations:
     ^{
         //self.center = CGPointMake(self.center.x + CGRectGetWidth(self.frame), self.frame.origin.y);         
         CGRect newRect = self.frame;
         newRect.origin.x += newRect.size.width;
         self.frame = newRect;
     } completion:^(BOOL finished) {
         if(self.delegate && [self.delegate respondsToSelector:@selector(backButtonTouched:)])
             [delegate backButtonTouched:self];
     }];
     
}





@end
