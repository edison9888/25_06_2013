//
//  MaintenanceLogDetailNotesView.m
//  GreenVolts
//
//  Created by Shinu Mohan on 24/08/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "MaintenanceLogDetailNotesView.h"
#import <QuartzCore/QuartzCore.h>
@interface MaintenanceLogDetailNotesView() 

-(void)createCustomNavigationView;
- (IBAction)logbackButtonTouched:(id)sender;   
@end
@implementation MaintenanceLogDetailNotesView
@synthesize detailtextView;
- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) 
    {
        [self loadview];
        // Initialization code
    }
    return self;
}
-(void)loadview
{
    [self createCustomNavigationView];
    
    notesview=[[UIView alloc]initWithFrame:CGRectMake(0,45,320,330)];
    notesview.backgroundColor=[UIColor whiteColor];
    [self addSubview:notesview];
    
    detailtextView = [[UITextView alloc] initWithFrame:CGRectMake(10,45,180,150)];
    detailtextView.clipsToBounds = YES;
    [detailtextView setFont:[UIFont boldSystemFontOfSize:16.0]];
    [detailtextView setTextAlignment:UITextAlignmentCenter];
    detailtextView.delegate = self;
    detailtextView.editable = YES;
    detailtextView.backgroundColor = [UIColor whiteColor];
    detailtextView.layer.borderWidth = 2.0f;
    detailtextView.layer.cornerRadius = 8; 
    detailtextView.layer.borderColor = [[UIColor grayColor] CGColor];

    detailtextView.text = @"Hello this is about the text view, the difference in text view and the text field is that you can display large data or paragraph in text view but in text field you cant.";
    detailtextView.returnKeyType = UIReturnKeyDefault;
    detailtextView.keyboardType = UIKeyboardTypeDefault; 
    detailtextView.scrollEnabled = YES;
    detailtextView.autoresizingMask = UIViewAutoresizingFlexibleHeight;
    
    // For the border and rounded corners
    
    [notesview addSubview:detailtextView]; 
    
    notessavebutton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    [notessavebutton addTarget:self 
               action:@selector(notessavedonButtonclick)
               forControlEvents:UIControlEventTouchDown];
    [notessavebutton setTitle:@"Save" forState:UIControlStateNormal];
    notessavebutton.frame = CGRectMake(190,148,100,40);
    notessavebutton.backgroundColor=[UIColor blueColor];
    [notesview addSubview:notessavebutton];

}


-(void)createCustomNavigationView
{
    UINavigationBar *navBar = [[UINavigationBar alloc]initWithFrame:CGRectMake(0, 0, 320, 45)];
    // navBar.tintColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"navpopover_cell_backround (2)"]];
    navBar.tintColor=[UIColor colorWithRed:1/255.f green:14/255.f blue:41/255.f alpha:1];

    UIButton *button=[UIButton buttonWithType:UIButtonTypeCustom];
    button.frame=CGRectMake(5,5,80,30);
    button.backgroundColor=[UIColor clearColor];
    button.titleLabel.text=@"BACK";
    [button setImage:[UIImage imageNamed:@"back.png"] forState:UIControlStateNormal];
    [button addTarget:self action:@selector(logbackButtonTouched:) forControlEvents:UIControlEventTouchUpInside];
    [navBar addSubview:button]; 
    
    UILabel *logtitlelabel = [[UILabel alloc] initWithFrame:CGRectMake(100,10,200,25)];
    logtitlelabel.backgroundColor = [UIColor clearColor];
    logtitlelabel.textColor = [UIColor whiteColor];
    logtitlelabel.text = @"MaintenanceLogDetails";
    [navBar addSubview:logtitlelabel];
    
    [self addSubview:navBar];
    
    
    
}
- (IBAction)logbackButtonTouched:(id)sender
{
    [UIView animateWithDuration:.35 delay:0.0 options:UIViewAnimationCurveEaseOut animations:
     ^{
         //self.center = CGPointMake(self.center.x + CGRectGetWidth(self.frame), self.frame.origin.y);         
         CGRect newRect = self.frame;
         newRect.origin.x += newRect.size.width;
         self.frame = newRect;
     } completion:^(BOOL finished) {
         [self removeFromSuperview];
     }];
}


-(void)notessavedonButtonclick
{
    NSLog(@"notes saved on button click");   
}
#pragma mark- textview delegate methods

- (BOOL)textViewShouldBeginEditing:(UITextView *)textView
{
    
    return YES;
    
}


- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range 
 replacementText:(NSString *)text
{
    // Any new character added is passed in as the "text" parameter
    if ([text isEqualToString:@"\n"]) {
        // Be sure to test for equality using the "isEqualToString" message
        [detailtextView resignFirstResponder];
        
        // Return FALSE so that the final '\n' character doesn't get added
        return FALSE;
    }
    // For any other character return TRUE so that the text gets added to the view
    return TRUE;
}



/*
 // Only override drawRect: if you perform custom drawing.
 // An empty implementation adversely affects performance during animation.
 - (void)drawRect:(CGRect)rect
 {
 // Drawing code
 }
 */

@end
