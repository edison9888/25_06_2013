//
//  AppDelegate.m
//  NotiyiiPhoneApplicationProject
//
//  Created by Veena on 10/09/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "AppDelegate.h"
#import "InboxViewController.h"
#import "TouchBaseViewController.h"
#import "DirectoryViewController.h"
#import "MoreViewController.h"
#import "CoreDataHandler.h"
#import "MobileSettingsViewController.h"
#import "MyApplication.h"
#import "GeneralClass.h"


@interface AppDelegate ()
{
    InboxViewController *inboxViewController;
    JsonParser *objParser;
    
    NSInteger minuteWhenResignActive;
    NSInteger minuteWhenBecomeActive;
}
@end

@implementation AppDelegate

@synthesize window = _window;
@synthesize tabBarController;
@synthesize loginViewController;
@synthesize navigationControllerInbox;
@synthesize navigationControllerTouchBase;
@synthesize navigationControllerDirectory;
@synthesize navigationControllerMore;
@synthesize mobileSettings;
@synthesize delegate;

BOOL checkFlag;

#pragma mark- launch
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    checkFlag = YES;
    
    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
    // Override point for customization after application launch.
     
    inboxViewController = [[InboxViewController alloc]initWithNibName:@"InboxViewController"
                                                               bundle:nil];
    TouchBaseViewController *touchBaseViewController = [[TouchBaseViewController alloc]initWithNibName:@"TouchBaseViewController"
                                                                                                bundle:nil];
    DirectoryViewController *directoryViewController = [[DirectoryViewController alloc]initWithNibName:@"DirectoryViewController"
                                                                                                bundle:nil];
    MoreViewController *moreViewController = [[MoreViewController alloc]initWithNibName:@"MoreViewController"
                                                                                 bundle:nil];
    
    
    self.navigationControllerInbox = [[UINavigationController alloc]initWithRootViewController:inboxViewController];
    self.navigationControllerTouchBase = [[UINavigationController alloc]initWithRootViewController:touchBaseViewController];
    self.navigationControllerDirectory = [[UINavigationController alloc]initWithRootViewController:directoryViewController];
    self.navigationControllerMore = [[UINavigationController alloc]initWithRootViewController:moreViewController];
    
    
    self.tabBarController = [[UITabBarController alloc]init];
    self.tabBarController.delegate = self;
    self.tabBarController.viewControllers = [NSArray arrayWithObjects:navigationControllerInbox, navigationControllerTouchBase, navigationControllerDirectory, navigationControllerMore, nil];
    
    loginViewController = [[LoginViewController alloc]initWithNibName:@"LoginViewController"
                                                               bundle:nil];


    self.window.rootViewController = self.loginViewController;
    //[UIApplication sharedApplication].applicationIconBadgeNumber = 0;
    [self.window makeKeyAndVisible];    
    
    return YES;
}

#pragma mark- Login Success
-(void)addTabBarToDisplay
{
    self.window. backgroundColor = [UIColor whiteColor];
    self.window.rootViewController = self.tabBarController;
}

-(void)logOutButtonTouched
{
    [[tabBarController view] removeFromSuperview];
    self.window.rootViewController = self.loginViewController;
    [self application:nil didFinishLaunchingWithOptions:nil];
}
#pragma mark- Set Badge
- (void)setTabTabBarBadge:(int)badgeValue
{
    if (badgeValue > 0)
        [[self.tabBarController.tabBar.items objectAtIndex:0] setBadgeValue:[NSString stringWithFormat:@"%d",badgeValue]];
    else
        [[self.tabBarController.tabBar.items objectAtIndex:0] setBadgeValue:NULL];
    
}

- (void)applicationWillResignActive:(UIApplication *)application
{
    NSLog(@"Application willResign");
    [[NSUserDefaults standardUserDefaults]setBool:YES forKey:@"SessionExpired"];
}
-(void)applicationDidBecomeActive:(UIApplication *)application
{
    NSLog(@"applicationDidBecomeActive");    
}
- (void)applicationDidEnterBackground:(UIApplication *)application
{
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
        NSLog(@"applicationDidEnterBackground");
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    NSLog(@"applicationWillEnterForeground");

    mobileSettings = [[MobileSettingsViewController alloc]initWithNibName:@"MobileSettingsViewController"
                                                                   bundle:nil];
    [mobileSettings checkSwitchPositions];
    
    //call vibrate method
    if (checkFlag) {
        
        
        [[NSNotificationCenter defaultCenter]postNotificationName:NSLocalizedString(@"NOTIFICATION OBJECT FOR TOUCHBASE SOUND", nil) object:nil ];
        
        checkFlag = NO;
    }
    else
    {
        [[NSNotificationCenter defaultCenter]postNotificationName:NSLocalizedString(@"NOTIFICATION OBJECT FOR INBOX SOUND", nil) object:nil ];
        
        checkFlag = YES;
    }
}


- (void)applicationWillTerminate:(UIApplication *)application
{
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}

- (void)tabBarController:(UITabBarController *)theTabBarController didSelectViewController:(UIViewController *)viewController {
    NSUInteger indexOfTab = [theTabBarController.viewControllers indexOfObject:viewController];
    if (indexOfTab == 0) //Inbox
    {
        //pass message to inbox view
        if (inboxViewController)
        {
            [inboxViewController inboxTabbarTouched];
        }
    }
}

#pragma mark push notifications
- (void)application:(UIApplication *)app didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)devToken {
    
    objParser = nil;
    if (!objParser)
    {
        objParser=[[JsonParser alloc] init];
        objParser.delegate=self.delegate;
    }
    
    NSString *token = [[devToken description] stringByTrimmingCharactersInSet:[NSCharacterSet characterSetWithCharactersInString:@"<> "]];
    token = [token stringByReplacingOccurrencesOfString:@" " withString:@""];
        
    NSLog(@"%@\n",token);
    
    NSString *userID = [[NSUserDefaults standardUserDefaults] objectForKey:@"USERID"];
    NSString *operationType  = [NSString stringWithFormat:@"%d",pushNotificationAPI]; 
     
    NSString *string = [NSString stringWithFormat:@"?userId=%@&operationType=%@&deviceToken=%@",userID,operationType,token];
    
    [objParser parseJson:pushNotificationAPI :string];
    
}

- (void)application:(UIApplication *)app didFailToRegisterForRemoteNotificationsWithError:(NSError *)err {
    NSLog(@"failed to regiser %@", err);
}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo {
    NSLog(@"Push Notification from Server ################################################# Push Notification from Server \n%@", userInfo);
    [GeneralClass showAlertView:self
                            msg:@"Push Notification from Server"
                          title:@"Push Notification from Server"
                    cancelTitle:@"OK"
                     otherTitle:nil
                            tag:deleteForeverSuccessAPITag];
}


@end
